buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        jcenter()
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
    }
}

version file('version.txt').text.trim()
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.grails-plugin-publish'
apply plugin: 'org.grails.grails-gsp'
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin: 'org.asciidoctor.convert'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided "org.springframework.boot:spring-boot-starter-logging"
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.grails:grails-plugin-testing"

    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"

    provided "com.agileorbit:schwartz:1.0.1"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

bootRepackage.enabled = false

assets {
    packagePlugin = true
}

grailsPublish {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    repo = 'plugins'
    githubSlug = 'robertoschwald/grails-schwartz-monitor'
    issueTrackerUrl = 'https://github.com/robertoschwald/grails-schwartz-monitor/issues'
    vcsUrl = 'https://github.com/robertoschwald/grails-schwartz-monitor/'
    license {
        name = project.hasProperty('license') ? [project.license] : ['Apache-2.0']
    }
    title = "Grails Schwartz Monitor"
    desc = "Monitor Quartz Jobs. Supports Grails-Schwartz and Grails-Quartz."
    developers = [robertoschwald:"Robert Oschwald"]
    userOrg = 'symentis GmbH'
}

task docs(dependsOn: ['asciidoctor', 'groovydoc']) {
    File dir = new File(buildDir, 'docs')
    dir.mkdirs()

    ['pdf', 'epub'].each { String ext ->
        File f = new File(dir, 'index.' + ext)
        if (f.exists()) {
            f.renameTo new File(dir, project.name + '-' + project.version + '.' + ext)
        }
    }

    new File(buildDir, 'docs/ghpages.html') << file('src/docs/index.tmpl').text.replaceAll('@VERSION@', "${project.version}")

    copy {
        from 'src/docs'
        into new File(buildDir, 'docs').path
        include '**/*.jpg', '**/*.png'
    }
}

asciidoctor {
    separateOutputDirs = false
    sourceDir = file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir new File(buildDir, 'docs')
    backends 'html5', 'pdf', 'epub3'
    attributes  copyright  : 'Apache License, Version 2.0',
      docinfo1             : 'true',
      doctype              : 'book',
      encoding             : 'utf-8',
      'front-cover-image'  : 'image:cover.png[Front Cover,800,600]',
      icons                : 'font',
      id                   : project.name + ':' + project.version,
      idprefix             : '',
      idseparator          : '-',
      lang                 : 'en',
      linkattrs            : true,
      numbered             : '',
      producer             : 'Asciidoctor',
      revnumber            : project.version,
      setanchors           : true,
      'source-highlighter'  : 'prettify',
      toc                  : 'left',
      toc2                 : '',
      toclevels            : '2'
}



